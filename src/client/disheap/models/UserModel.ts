/* tslint:disable */
/* eslint-disable */
/**
 * Disheap Service
 * Disheap API connection to Disbands and Disbeacs information
 *
 * The version of the OpenAPI document: v0.0.1
 * Contact: ire.cunba@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Disorder,
    DisorderFromJSON,
    DisorderFromJSONTyped,
    DisorderToJSON,
} from './Disorder';
import {
    SchoolYear,
    SchoolYearFromJSON,
    SchoolYearFromJSONTyped,
    SchoolYearToJSON,
} from './SchoolYear';

/**
 * 
 * @export
 * @interface UserModel
 */
export interface UserModel {
    /**
     * 
     * @type {string}
     * @memberof UserModel
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof UserModel
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof UserModel
     */
    surname?: string;
    /**
     * 
     * @type {string}
     * @memberof UserModel
     */
    birthday?: string;
    /**
     * 
     * @type {boolean}
     * @memberof UserModel
     */
    isDisorder?: boolean;
    /**
     * 
     * @type {string}
     * @memberof UserModel
     */
    email?: string;
    /**
     * 
     * @type {string}
     * @memberof UserModel
     */
    password?: string;
    /**
     * 
     * @type {number}
     * @memberof UserModel
     */
    created?: number;
    /**
     * 
     * @type {number}
     * @memberof UserModel
     */
    updated?: number;
    /**
     * 
     * @type {string}
     * @memberof UserModel
     */
    role?: string;
    /**
     * 
     * @type {Disorder}
     * @memberof UserModel
     */
    disorder?: Disorder;
    /**
     * 
     * @type {SchoolYear}
     * @memberof UserModel
     */
    schoolYear?: SchoolYear;
}

export function UserModelFromJSON(json: any): UserModel {
    return UserModelFromJSONTyped(json, false);
}

export function UserModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'surname': !exists(json, 'surname') ? undefined : json['surname'],
        'birthday': !exists(json, 'birthday') ? undefined : json['birthday'],
        'isDisorder': !exists(json, 'isDisorder') ? undefined : json['isDisorder'],
        'email': !exists(json, 'email') ? undefined : json['email'],
        'password': !exists(json, 'password') ? undefined : json['password'],
        'created': !exists(json, 'created') ? undefined : json['created'],
        'updated': !exists(json, 'updated') ? undefined : json['updated'],
        'role': !exists(json, 'role') ? undefined : json['role'],
        'disorder': !exists(json, 'disorder') ? undefined : DisorderFromJSON(json['disorder']),
        'schoolYear': !exists(json, 'schoolYear') ? undefined : SchoolYearFromJSON(json['schoolYear']),
    };
}

export function UserModelToJSON(value?: UserModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'surname': value.surname,
        'birthday': value.birthday,
        'isDisorder': value.isDisorder,
        'email': value.email,
        'password': value.password,
        'created': value.created,
        'updated': value.updated,
        'role': value.role,
        'disorder': DisorderToJSON(value.disorder),
        'schoolYear': SchoolYearToJSON(value.schoolYear),
    };
}

