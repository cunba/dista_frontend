/* tslint:disable */
/* eslint-disable */
/**
 * Disheap Service
 * Disheap API connection to Disbands and Disbeacs information
 *
 * The version of the OpenAPI document: v0.0.1
 * Contact: ire.cunba@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    HeartRate,
    HeartRateFromJSON,
    HeartRateFromJSONTyped,
    HeartRateToJSON,
} from './HeartRate';

/**
 * 
 * @export
 * @interface MeasureResponseHeartRate
 */
export interface MeasureResponseHeartRate {
    /**
     * 
     * @type {Array<HeartRate>}
     * @memberof MeasureResponseHeartRate
     */
    measures?: Array<HeartRate>;
    /**
     * 
     * @type {number}
     * @memberof MeasureResponseHeartRate
     */
    minMeasure?: number;
    /**
     * 
     * @type {number}
     * @memberof MeasureResponseHeartRate
     */
    maxMeasure?: number;
}

export function MeasureResponseHeartRateFromJSON(json: any): MeasureResponseHeartRate {
    return MeasureResponseHeartRateFromJSONTyped(json, false);
}

export function MeasureResponseHeartRateFromJSONTyped(json: any, ignoreDiscriminator: boolean): MeasureResponseHeartRate {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'measures': !exists(json, 'measures') ? undefined : ((json['measures'] as Array<any>).map(HeartRateFromJSON)),
        'minMeasure': !exists(json, 'minMeasure') ? undefined : json['minMeasure'],
        'maxMeasure': !exists(json, 'maxMeasure') ? undefined : json['maxMeasure'],
    };
}

export function MeasureResponseHeartRateToJSON(value?: MeasureResponseHeartRate | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'measures': value.measures === undefined ? undefined : ((value.measures as Array<any>).map(HeartRateToJSON)),
        'minMeasure': value.minMeasure,
        'maxMeasure': value.maxMeasure,
    };
}

