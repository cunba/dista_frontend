/* tslint:disable */
/* eslint-disable */
/**
 * Disheap Service
 * Disheap API connection to Disbands and Disbeacs information
 *
 * The version of the OpenAPI document: v0.0.1
 * Contact: ire.cunba@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Disband,
    DisbandFromJSON,
    DisbandFromJSONTyped,
    DisbandToJSON,
} from './Disband';

/**
 * 
 * @export
 * @interface Lightning
 */
export interface Lightning {
    /**
     * 
     * @type {string}
     * @memberof Lightning
     */
    id?: string;
    /**
     * 
     * @type {number}
     * @memberof Lightning
     */
    lightning?: number;
    /**
     * 
     * @type {number}
     * @memberof Lightning
     */
    redLightning?: number;
    /**
     * 
     * @type {number}
     * @memberof Lightning
     */
    greenLightning?: number;
    /**
     * 
     * @type {number}
     * @memberof Lightning
     */
    blueLightning?: number;
    /**
     * 
     * @type {number}
     * @memberof Lightning
     */
    date?: number;
    /**
     * 
     * @type {Disband}
     * @memberof Lightning
     */
    disband?: Disband;
}

export function LightningFromJSON(json: any): Lightning {
    return LightningFromJSONTyped(json, false);
}

export function LightningFromJSONTyped(json: any, ignoreDiscriminator: boolean): Lightning {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'lightning': !exists(json, 'lightning') ? undefined : json['lightning'],
        'redLightning': !exists(json, 'redLightning') ? undefined : json['redLightning'],
        'greenLightning': !exists(json, 'greenLightning') ? undefined : json['greenLightning'],
        'blueLightning': !exists(json, 'blueLightning') ? undefined : json['blueLightning'],
        'date': !exists(json, 'date') ? undefined : json['date'],
        'disband': !exists(json, 'disband') ? undefined : DisbandFromJSON(json['disband']),
    };
}

export function LightningToJSON(value?: Lightning | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'lightning': value.lightning,
        'redLightning': value.redLightning,
        'greenLightning': value.greenLightning,
        'blueLightning': value.blueLightning,
        'date': value.date,
        'disband': DisbandToJSON(value.disband),
    };
}

